$date
	Fri Jul 16 15:30:13 2021
$end

$version
	Synopsys VCS version R-2020.12-SP1_Full64
$end

$timescale
	1s
$end

$comment Csum: 1 9dbd5495f6f474ca $end


$scope module Test_AHB_Lite $end
$var reg 1 ! clock $end
$var wire 1 " write $end
$var wire 1 # trans $end
$var wire 1 $ readyout $end
$var wire 8 % waddr [7:0] $end
$var wire 8 & wdata [7:0] $end
$var wire 8 ' rdata [7:0] $end
$var wire 8 ( value [7:0] $end

$scope module perry $end
$var wire 1 ) clock $end
$var wire 1 " write $end
$var wire 1 # trans $end
$var wire 8 % waddr [7:0] $end
$var wire 8 & wdata [7:0] $end
$var reg 1 * readyout $end
$var reg 8 + rdata [7:0] $end
$var reg 1 , mode $end
$upscope $end


$scope module conroy $end
$var wire 1 - clock $end
$var wire 1 $ readyout $end
$var wire 8 ' rdata [7:0] $end
$var reg 1 . write $end
$var reg 1 / trans $end
$var reg 8 0 waddr [7:0] $end
$var reg 8 1 wdata [7:0] $end
$var reg 8 2 value [7:0] $end
$var reg 1 3 set $end
$var reg 1 4 await $end
$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
04
1!
0/
x.
0,
x*
x$
03
0#
x"
b00000111 2
bxxxxxxxx 0
bxxxxxxxx 1
bxxxxxxxx +
bxxxxxxxx '
b00000111 (
bxxxxxxxx %
bxxxxxxxx &
1)
1-
$end
#1
0!
0)
0-
#2
1!
1)
1-
0*
0$
1.
1"
1/
1#
b00000000 0
b00000000 %
b00000111 1
b00000111 &
13
#3
0!
0)
0-
#4
1!
1)
1-
1,
b00000111 +
b00000111 '
1*
1$
0.
0"
b00000111 0
b00000111 %
14
#5
0!
0)
0-
#6
1!
1)
1-
b00010110 +
b00010110 '
0/
0#
03
#7
0!
0)
0-
#8
1!
1)
1-
0*
0$
1.
1"
1/
1#
b00000000 0
b00000000 %
b00010110 2
b00010110 (
b00010110 1
b00010110 &
04
13
#9
0!
0)
0-
